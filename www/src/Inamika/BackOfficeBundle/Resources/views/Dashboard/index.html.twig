{% set pathBase='inamika_backoffice_orders' %}
{% set pathBaseApi='api_orders' %}
{% extends "InamikaBackOfficeBundle::layout.html.twig" %}
{% block stylesheet %}
	{{ parent() }}
{% endblock stylesheet %}
{% block body %}
{{ parent()}}
<div class="row">
    <!-- column -->
    <div class="col-lg-6">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">
                    <div class="form-group">
                        <select class="form-control" id="totalsYearSelect" tabindex="1">
                            {% for year in yearsByOrders %} 
                               <option value="{{ year.year }}">{{ 'ORDERS_IN' | trans }} {{ year.year }}</option> 
                            {% endfor %}
                        </select>
                    </div>
                </h4>
                <div id="chartTotal"></div>
            </div>
        </div>
    </div>
    <!-- column -->
    <!-- column -->
    <div class="col-lg-6">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">
                    <div class="form-group">
                        <select class="form-control" id="visitsYearSelect" tabindex="1">
                            {% for year in yearsByVisits %} 
                               <option value="{{ year.year }}">{{ 'VISITS_IN' | trans }} {{ year.year }}</option> 
                            {% endfor %}
                        </select>
                    </div>
                </h4>
                <div id="chartVisits"></div>
            </div>
        </div>
    </div>
</div>
<h3 class="text-themecolor">{{ 'RECENT_ORDERS' | trans }}</h3>
<hr>
<div class="table-responsive">
    <table id="{{ pathBase }}_dataTable" class="display nowrap table table-striped table-bordered" cellspacing="0" width="100%">
    </table>
</div>
{% endblock body %}
{% block javascripts %}
	{{ parent() }}
{% include 'InamikaBackOfficeBundle:_partials:dataTableScripts.html.twig' with { pathBase:pathBase,loadData:pathBaseApi, landingRedirect:true } %}
    <script src="{{ asset('bundles/inamikabackoffice/assets/plugins/Chart.js/chartjs.init.js')}}"></script>
    <script src="{{ asset('bundles/inamikabackoffice/assets/plugins/Chart.js/Chart.min.js')}}"></script>
    <script>
    $(function () {
        loadTotals();
        $("#totalsYearSelect").on("change",function (){
            loadTotals();
        });
        loadVisits();
        $("#visitsYearSelect").on("change",function (){
            loadVisits();
        });

        /** BEGIN DATATABLE */
        $('#{{ pathBase }}_dataTable').DataTable({
            "searching": false,
            "info":false,
            "paging": false,
            order: [[ 0, 'desc' ]],
            
            "serverSide": true,
            columns: [
                { title:"#",data: "id" },
                { title:"{{ 'CUSTOMER' | trans }}",data: "customer.name" },
                { 
                    title:"Canal",
                    data: 'channel', 
                    className: "text-center",
                    render: function (data, type, JsonResultRow, meta) {
                        if(data=='APP'){
                            return `<span class="badge badge-pill badge-primary">${data}</span>`;
                        }else{
                            return `<span class="badge badge-pill badge-success">${data}</span>`;
                        }                        
                    } 
                },
                { 
                    title:"Fecha",
                    data: "createdAt",
                    render: function (data, type, JsonResultRow, meta) {
                        var d = new Date(JsonResultRow.createdAt);
                        return `${(d.getDate()<10?'0':'') + d.getDate()}/${(d.getMonth()+1)}/${d.getFullYear()} ${(d.getHours()<10?'0':'') + d.getHours()}:${(d.getMinutes()<10?'0':'') + d.getMinutes()}`;
                    }
                },
                {% for currency in currencies %}
                { 
                    title:"Total {{ currency.symbol }}",
                    className: "text-right",
                    orderable: false,
                    render: function (data, type, JsonResultRow, meta) {
                        for(var i=0; i<=JsonResultRow.totals.length; i++){
                            if(JsonResultRow.totals[i].currency.symbol=='{{ currency.symbol }}')
                                return `<b>{{ currency.symbol }} ${new Intl.NumberFormat("de-DE").format(parseFloat(JsonResultRow.totals[i].total).toFixed(2))}</b>`;  
                        }
                        {# console.log(JsonResultRow);
                        return `<b>{{ currency.symbol }} ${new Intl.NumberFormat("de-DE").format(parseFloat(JsonResultRow.total).toFixed(2))}</b>`; #}
                    }
                },
                {% endfor %}
                { 
                    title:"Estado",
                    data: 'status', 
                    className: "text-center",
                    render: function (data, type, JsonResultRow, meta) {
                        if(data){
                            return `<span class="badge badge-pill badge-${data.color}">${data.name}</span>`;
                        }else{
                            return `<span class="badge badge-pill badge-light">{{ 'N/E' | trans }}</span>`;
                        }                        
                    }
                },
                {
                    data: null,
                    orderable: false,
                    className: "text-center",
                    defaultContent: `
                    <button type="button" title="Ver" class="btn-view btn btn-outline-success btn-circle"><i class="fa fa-eye"></i></button>
                    `
                }
            ]
        });
        /** END DATATABLE */

        
    });


    function loadTotals(){
        $("#chartTotal").css("min-height",$("#chartTotal").css("height"));
        $("#chartTotal").html(getSpin());
        $.ajax({
            url: "{{ path('api_orders_total')}}?year="+$("#totalsYearSelect").val(),
            type: 'GET',
            crossDomain: true,
            success: function(data) {
                $("#chartTotal").html('<canvas id="chart1" height="150"></canvas>');
                labels=[];
                values=[];
                for(var i=0; i<data.length; i++){
                    labels.push(translate(data[i].month_label));
                    values.push(data[i].value);
                }
                var ctx1 = document.getElementById("chart1").getContext("2d");
                var data1 = {
                    labels: labels,
                    datasets: [
                        {
                            label: "Pedidos",
                            fillColor: "#009efb",
                            strokeColor: "#009efb",
                            pointColor: "#009efb",
                            pointStrokeColor: "#fff",
                            pointHighlightFill: "#fff",
                            pointHighlightStroke: "#009efb",
                            data: values
                        }
                    ]
                };
                Chart.types.Line.extend({
                name: "LineAlt",
                initialize: function () {
                    Chart.types.Line.prototype.initialize.apply(this, arguments);
                    var ctx = this.chart.ctx;
                    var originalStroke = ctx.stroke;
                    ctx1.stroke = function () {
                        ctx1.save();
                        ctx1.shadowColor = 'rgba(0, 0, 0, 0.4)';
                        ctx1.shadowBlur = 10;
                        ctx1.shadowOffsetX = 8;
                        ctx1.shadowOffsetY = 8;
                        originalStroke.apply(this, arguments)
                        ctx1.restore();
                    }
                }
                });
                var chart1 = new Chart(ctx1).LineAlt(data1, {
                    scaleShowGridLines : true,
                    scaleGridLineColor : "rgba(0,0,0,.005)",
                    scaleGridLineWidth : 0,
                    scaleShowHorizontalLines: true,
                    scaleShowVerticalLines: true,
                    bezierCurve : true,
                    bezierCurveTension : 0.4,
                    pointDot : true,
                    pointDotRadius : 4,
                    pointDotStrokeWidth : 2,
                    pointHitDetectionRadius : 2,
                    datasetStroke : true,
                    tooltipCornerRadius: 2,
                    datasetStrokeWidth : 0,
                    datasetFill : false,
                    responsive: true
                });
            },
            complete:function(){
                
            },
            error: function(data, status, error) {
                
            }
        });
    }
    
    function loadVisits(){
        $("#chartVisits").css("min-height",$("#chartVisits").css("height"));
        $("#chartVisits").html(getSpin());
        $.ajax({
            url: "{{ path('api_visits_total')}}?year="+$("#visitsYearSelect").val(),
            type: 'GET',
            crossDomain: true,
            success: function(data) {
                $("#chartVisits").html('<canvas id="chart2" height="150"></canvas>');
                labels=[];
                values=[];
                for(var i=0; i<data.length; i++){
                    labels.push(translate(data[i].month_label));
                    values.push(data[i].value);
                }
                /** BEGIN CHART */        
                var ctx2 = document.getElementById("chart2").getContext("2d");
                var data2 = {
                    labels: labels,
                    datasets: [
                        {
                            label: "Visitas",
                            fillColor: "#55ce63",
                            strokeColor: "#55ce63",
                            highlightFill: "#55ce63",
                            highlightStroke: "#55ce63",
                            data: values
                        }
                    ]
                };
                
                var chart2 = new Chart(ctx2).Bar(data2, {
                    scaleBeginAtZero : true,
                    scaleShowGridLines : true,
                    scaleGridLineColor : "rgba(0,0,0,.005)",
                    scaleGridLineWidth : 0,
                    scaleShowHorizontalLines: true,
                    scaleShowVerticalLines: true,
                    barShowStroke : true,
                    barStrokeWidth : 0,
                    tooltipCornerRadius: 2,
                    barDatasetSpacing : 3,
                    responsive: true
                });
                /** END CHART */
            },
            complete:function(){
                
            },
            error: function(data, status, error) {
                
            }
        });
    }

    $('#{{ pathBase }}_dataTable').on('click', 'button.btn-view', function () {
        var data = $('#{{ pathBase }}_dataTable').DataTable().row( $(this).parents('tr') ).data();
        var url="{{ path(pathBase~'_view',{ id: 'ENTITY_ID' })}}";
        location.href=url.replace('ENTITY_ID',data.id);
    });

    $.extend( true, $.fn.dataTable.defaults, {
        dom: 'Bfrtip',

        paging:false,
        ajax: {
            url: "{{ path('api_orders_recents')}}",
            dataSrc: "data"
        },
        language: {
            url: '//cdn.datatables.net/plug-ins/1.10.19/i18n/Spanish.json',
            dataSrc: ''
        },
        buttons: [
        //'excel',
        ],
    });
    </script>  
{% endblock javascripts %}