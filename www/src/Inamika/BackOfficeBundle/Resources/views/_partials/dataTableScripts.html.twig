<script src="{{ asset('bundles/inamikabackoffice/assets/plugins/datatables/jquery.dataTables.min.js') }}"></script>
<script src="https://cdn.datatables.net/buttons/1.2.2/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.2.2/js/buttons.flash.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js"></script>
<script src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/pdfmake.min.js"></script>
<script src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/1.2.2/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.2.2/js/buttons.print.min.js"></script>
<script src="//cdn.datatables.net/plug-ins/1.10.19/sorting/date-euro.js"></script>
<script src="//cdn.datatables.net/select/1.2.7/js/dataTables.select.min.js"></script>
<script>
function capitalizeFirstLetter(string) {
    string=string.toLowerCase();
  return string.charAt(0).toUpperCase() + string.slice(1);
}
$('#{{ pathBase }}_dataTable').on('preXhr.dt', function (e, settings, data) {
    sortColumns = [];
    directionColumns = [];
    for (let i = 0; i < data.order.length; i++) {
        col = data.order[i].column;
        dir = data.order[i].dir;
        sortColumns.push(data.columns[col].data);
        directionColumns.push(dir);
    }
    data.sort = sortColumns.join();
    data.direction = directionColumns.join();
});
$.extend( true, $.fn.dataTable.defaults, {
    dom: 'Bfrtip',

    pageLength: 50,
    lengthMenu: [15, 25, 50],
    ajax: {
        url: "{{ path(loadData)}}",
        dataSrc: "data"
    },
    language: {
        url: '//cdn.datatables.net/plug-ins/1.10.19/i18n/Spanish.json',
        dataSrc: ''
    },
    buttons: [
    //'excel',
    ],
});
$(document).on("preInit.dt", function () {
    var $sb = $(".dataTables_filter input[type='search']");
    // remove current handler
    $sb.off();
    // Add key hander
    $sb.on("keypress", function (evtObj) {
        if (evtObj.keyCode == 13) {
            $('#{{ pathBase }}_dataTable').DataTable().search($sb.val()).draw();
        }
    });
});
$('#{{ pathBase }}_dataTable').on('click', 'button.btn-edit', function () {
    var data = $('#{{ pathBase }}_dataTable').DataTable().row( $(this).parents('tr') ).data();
    var url="{{ path(pathBase~'_edit',{ id: 'ENTITY_ID' })}}";
    location.href=url.replace('ENTITY_ID',data.id);
});

$('#{{ pathBase }}_dataTable').on('click', 'button.btn-view', function () {
    var data = $('#{{ pathBase }}_dataTable').DataTable().row( $(this).parents('tr') ).data();
    var url="{{ path(pathBase~'_landing',{ id: 'ENTITY_ID' })}}";
    {% if landingRedirect is defined %}
        location.href=url.replace('ENTITY_ID',data.id);
    {% else %}
        modalLanding_{{ pathBase }}.show(data.name,data.id);
    {% endif %}
});

$('#{{ pathBase }}_dataTable').on('click', 'button.btn-remove', function () {
    var form = $("#formDelete");
    var row=$('#{{ pathBase }}_dataTable').DataTable().row( $(this).parents('tr'));
    var data = row.data();
    var url = form.attr("action").replace(':ENTITY_ID', data.id);
    var dataForm = form.serialize();
    swal({   
        title: "{{ 'WARNING' | trans }}",   
        text: "{{ 'ARE_YOU_SURE_DELETE' | trans }}",   
        type: "warning",   
        showCancelButton: true,   
        confirmButtonColor: "#DD6B55",   
        confirmButtonText: "{{ 'YES_DELETE' | trans }}",   
        cancelButtonText: "{{ 'NO' | trans }}",   
        closeOnConfirm: true 
    }, function(){
        $.ajax({
            url: url,
            type: 'DELETE',
            crossDomain: true,
            success: function(data) {
                row.remove().draw();
                $.toast({
                    heading: '{{ 'SUCCESS' | trans }}',
                    text: '{{ 'DELETE_SUCCESS' | trans }}',
                    position: 'top-right',
                    icon: 'success',
                    hideAfter: 3000, 
                    stack: 6
                });
            },  
            complete:function(){
            },
            error: function(data, status, error) {
                var message='{{ 'ERROR' | trans }}';
                if(typeof data.responseJSON.message != 'undefined' && data.responseJSON.message != ''){
                    message=data.responseJSON.message
                }
                $.toast({
                    heading: '{{ 'ERROR' | trans }}',
                    text: message,
                    position: 'top-right',
                    icon: 'error',
                    hideAfter: 3000, 
                    stack: 6
                });
            }
        });
    });
});
</script>